// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id          Int       @id @default(autoincrement())
  username    String    @unique
  email       String    @unique
  password    String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  profile     Profile?
  posts       Post[]
  comments    Comment[]
}

model Profile {
  id          Int       @id @default(autoincrement())
  firstName   String
  lastName    String
  age         Int
  pictureUrl  String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int
}

model Post {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  title       String    @unique
  content     String
  imageUrl    String
  publishedAt DateTime?
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int
  categories  CategoriesOnPosts[]
  comments    Comment[]
}

model Comment {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  parentId    Int?
  content     String
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int
  post        Post      @relation(fields: [postId], references: [id],  onDelete: Cascade)
  postId      Int
}

model Category {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  name        String    @unique
  posts       CategoriesOnPosts[]
}

model CategoriesOnPosts {
  id          Int       @id @default(autoincrement())
  post        Post      @relation(fields: [postId], references: [id],  onDelete: Cascade)
  postId     Int
  category    Category   @relation(fields: [categoryId], references: [id],  onDelete: Cascade)
  categoryId  Int
}


